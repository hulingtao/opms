<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.opms.mappers.PmsOvertimesMapper" >
  <resultMap id="BaseResultMap" type="com.opms.entity.PmsOvertimes" >
    <id column="overtimeid" property="overtimeid" jdbcType="BIGINT" />
    <result column="userid" property="userid" jdbcType="BIGINT" />
    <result column="started" property="started" jdbcType="INTEGER" />
    <result column="ended" property="ended" jdbcType="INTEGER" />
    <result column="longtime" property="longtime" jdbcType="TINYINT" />
    <result column="holiday" property="holiday" jdbcType="BIT" />
    <result column="way" property="way" jdbcType="BIT" />
    <result column="reason" property="reason" jdbcType="VARCHAR" />
    <result column="result" property="result" jdbcType="BIT" />
    <result column="status" property="status" jdbcType="BIT" />
    <result column="approverids" property="approverids" jdbcType="VARCHAR" />
    <result column="created" property="created" jdbcType="INTEGER" />
    <result column="changed" property="changed" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    overtimeid, userid, started, ended, longtime, holiday, way, reason, result, status, 
    approverids, created, changed
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.opms.entity.PmsOvertimesExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pms_overtimes
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from pms_overtimes
    where overtimeid = #{overtimeid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from pms_overtimes
    where overtimeid = #{overtimeid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.opms.entity.PmsOvertimesExample" >
    delete from pms_overtimes
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.opms.entity.PmsOvertimes" >
    insert into pms_overtimes (overtimeid, userid, started, 
      ended, longtime, holiday, 
      way, reason, result, status, 
      approverids, created, changed
      )
    values (#{overtimeid,jdbcType=BIGINT}, #{userid,jdbcType=BIGINT}, #{started,jdbcType=INTEGER}, 
      #{ended,jdbcType=INTEGER}, #{longtime,jdbcType=TINYINT}, #{holiday,jdbcType=BIT}, 
      #{way,jdbcType=BIT}, #{reason,jdbcType=VARCHAR}, #{result,jdbcType=BIT}, #{status,jdbcType=BIT}, 
      #{approverids,jdbcType=VARCHAR}, #{created,jdbcType=INTEGER}, #{changed,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.opms.entity.PmsOvertimes" >
    insert into pms_overtimes
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="overtimeid != null" >
        overtimeid,
      </if>
      <if test="userid != null" >
        userid,
      </if>
      <if test="started != null" >
        started,
      </if>
      <if test="ended != null" >
        ended,
      </if>
      <if test="longtime != null" >
        longtime,
      </if>
      <if test="holiday != null" >
        holiday,
      </if>
      <if test="way != null" >
        way,
      </if>
      <if test="reason != null" >
        reason,
      </if>
      <if test="result != null" >
        result,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="approverids != null" >
        approverids,
      </if>
      <if test="created != null" >
        created,
      </if>
      <if test="changed != null" >
        changed,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="overtimeid != null" >
        #{overtimeid,jdbcType=BIGINT},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=BIGINT},
      </if>
      <if test="started != null" >
        #{started,jdbcType=INTEGER},
      </if>
      <if test="ended != null" >
        #{ended,jdbcType=INTEGER},
      </if>
      <if test="longtime != null" >
        #{longtime,jdbcType=TINYINT},
      </if>
      <if test="holiday != null" >
        #{holiday,jdbcType=BIT},
      </if>
      <if test="way != null" >
        #{way,jdbcType=BIT},
      </if>
      <if test="reason != null" >
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="result != null" >
        #{result,jdbcType=BIT},
      </if>
      <if test="status != null" >
        #{status,jdbcType=BIT},
      </if>
      <if test="approverids != null" >
        #{approverids,jdbcType=VARCHAR},
      </if>
      <if test="created != null" >
        #{created,jdbcType=INTEGER},
      </if>
      <if test="changed != null" >
        #{changed,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.opms.entity.PmsOvertimesExample" resultType="java.lang.Integer" >
    select count(*) from pms_overtimes
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update pms_overtimes
    <set >
      <if test="record.overtimeid != null" >
        overtimeid = #{record.overtimeid,jdbcType=BIGINT},
      </if>
      <if test="record.userid != null" >
        userid = #{record.userid,jdbcType=BIGINT},
      </if>
      <if test="record.started != null" >
        started = #{record.started,jdbcType=INTEGER},
      </if>
      <if test="record.ended != null" >
        ended = #{record.ended,jdbcType=INTEGER},
      </if>
      <if test="record.longtime != null" >
        longtime = #{record.longtime,jdbcType=TINYINT},
      </if>
      <if test="record.holiday != null" >
        holiday = #{record.holiday,jdbcType=BIT},
      </if>
      <if test="record.way != null" >
        way = #{record.way,jdbcType=BIT},
      </if>
      <if test="record.reason != null" >
        reason = #{record.reason,jdbcType=VARCHAR},
      </if>
      <if test="record.result != null" >
        result = #{record.result,jdbcType=BIT},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=BIT},
      </if>
      <if test="record.approverids != null" >
        approverids = #{record.approverids,jdbcType=VARCHAR},
      </if>
      <if test="record.created != null" >
        created = #{record.created,jdbcType=INTEGER},
      </if>
      <if test="record.changed != null" >
        changed = #{record.changed,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update pms_overtimes
    set overtimeid = #{record.overtimeid,jdbcType=BIGINT},
      userid = #{record.userid,jdbcType=BIGINT},
      started = #{record.started,jdbcType=INTEGER},
      ended = #{record.ended,jdbcType=INTEGER},
      longtime = #{record.longtime,jdbcType=TINYINT},
      holiday = #{record.holiday,jdbcType=BIT},
      way = #{record.way,jdbcType=BIT},
      reason = #{record.reason,jdbcType=VARCHAR},
      result = #{record.result,jdbcType=BIT},
      status = #{record.status,jdbcType=BIT},
      approverids = #{record.approverids,jdbcType=VARCHAR},
      created = #{record.created,jdbcType=INTEGER},
      changed = #{record.changed,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.opms.entity.PmsOvertimes" >
    update pms_overtimes
    <set >
      <if test="userid != null" >
        userid = #{userid,jdbcType=BIGINT},
      </if>
      <if test="started != null" >
        started = #{started,jdbcType=INTEGER},
      </if>
      <if test="ended != null" >
        ended = #{ended,jdbcType=INTEGER},
      </if>
      <if test="longtime != null" >
        longtime = #{longtime,jdbcType=TINYINT},
      </if>
      <if test="holiday != null" >
        holiday = #{holiday,jdbcType=BIT},
      </if>
      <if test="way != null" >
        way = #{way,jdbcType=BIT},
      </if>
      <if test="reason != null" >
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="result != null" >
        result = #{result,jdbcType=BIT},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=BIT},
      </if>
      <if test="approverids != null" >
        approverids = #{approverids,jdbcType=VARCHAR},
      </if>
      <if test="created != null" >
        created = #{created,jdbcType=INTEGER},
      </if>
      <if test="changed != null" >
        changed = #{changed,jdbcType=INTEGER},
      </if>
    </set>
    where overtimeid = #{overtimeid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.opms.entity.PmsOvertimes" >
    update pms_overtimes
    set userid = #{userid,jdbcType=BIGINT},
      started = #{started,jdbcType=INTEGER},
      ended = #{ended,jdbcType=INTEGER},
      longtime = #{longtime,jdbcType=TINYINT},
      holiday = #{holiday,jdbcType=BIT},
      way = #{way,jdbcType=BIT},
      reason = #{reason,jdbcType=VARCHAR},
      result = #{result,jdbcType=BIT},
      status = #{status,jdbcType=BIT},
      approverids = #{approverids,jdbcType=VARCHAR},
      created = #{created,jdbcType=INTEGER},
      changed = #{changed,jdbcType=INTEGER}
    where overtimeid = #{overtimeid,jdbcType=BIGINT}
  </update>
</mapper>