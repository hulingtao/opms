<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.opms.mappers.PmsBusinesstripsMapper" >
  <resultMap id="BaseResultMap" type="com.opms.entity.PmsBusinesstrips" >
    <id column="businesstripid" property="businesstripid" jdbcType="BIGINT" />
    <result column="userid" property="userid" jdbcType="BIGINT" />
    <result column="destinations" property="destinations" jdbcType="VARCHAR" />
    <result column="starteds" property="starteds" jdbcType="VARCHAR" />
    <result column="endeds" property="endeds" jdbcType="VARCHAR" />
    <result column="days" property="days" jdbcType="TINYINT" />
    <result column="reason" property="reason" jdbcType="VARCHAR" />
    <result column="picture" property="picture" jdbcType="VARCHAR" />
    <result column="result" property="result" jdbcType="BIT" />
    <result column="status" property="status" jdbcType="BIT" />
    <result column="approverids" property="approverids" jdbcType="VARCHAR" />
    <result column="created" property="created" jdbcType="INTEGER" />
    <result column="changed" property="changed" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    businesstripid, userid, destinations, starteds, endeds, days, reason, picture, result, 
    status, approverids, created, changed
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.opms.entity.PmsBusinesstripsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pms_businesstrips
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from pms_businesstrips
    where businesstripid = #{businesstripid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from pms_businesstrips
    where businesstripid = #{businesstripid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.opms.entity.PmsBusinesstripsExample" >
    delete from pms_businesstrips
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.opms.entity.PmsBusinesstrips" >
    insert into pms_businesstrips (businesstripid, userid, destinations, 
      starteds, endeds, days, 
      reason, picture, result, 
      status, approverids, created, 
      changed)
    values (#{businesstripid,jdbcType=BIGINT}, #{userid,jdbcType=BIGINT}, #{destinations,jdbcType=VARCHAR}, 
      #{starteds,jdbcType=VARCHAR}, #{endeds,jdbcType=VARCHAR}, #{days,jdbcType=TINYINT}, 
      #{reason,jdbcType=VARCHAR}, #{picture,jdbcType=VARCHAR}, #{result,jdbcType=BIT}, 
      #{status,jdbcType=BIT}, #{approverids,jdbcType=VARCHAR}, #{created,jdbcType=INTEGER}, 
      #{changed,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.opms.entity.PmsBusinesstrips" >
    insert into pms_businesstrips
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="businesstripid != null" >
        businesstripid,
      </if>
      <if test="userid != null" >
        userid,
      </if>
      <if test="destinations != null" >
        destinations,
      </if>
      <if test="starteds != null" >
        starteds,
      </if>
      <if test="endeds != null" >
        endeds,
      </if>
      <if test="days != null" >
        days,
      </if>
      <if test="reason != null" >
        reason,
      </if>
      <if test="picture != null" >
        picture,
      </if>
      <if test="result != null" >
        result,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="approverids != null" >
        approverids,
      </if>
      <if test="created != null" >
        created,
      </if>
      <if test="changed != null" >
        changed,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="businesstripid != null" >
        #{businesstripid,jdbcType=BIGINT},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=BIGINT},
      </if>
      <if test="destinations != null" >
        #{destinations,jdbcType=VARCHAR},
      </if>
      <if test="starteds != null" >
        #{starteds,jdbcType=VARCHAR},
      </if>
      <if test="endeds != null" >
        #{endeds,jdbcType=VARCHAR},
      </if>
      <if test="days != null" >
        #{days,jdbcType=TINYINT},
      </if>
      <if test="reason != null" >
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="picture != null" >
        #{picture,jdbcType=VARCHAR},
      </if>
      <if test="result != null" >
        #{result,jdbcType=BIT},
      </if>
      <if test="status != null" >
        #{status,jdbcType=BIT},
      </if>
      <if test="approverids != null" >
        #{approverids,jdbcType=VARCHAR},
      </if>
      <if test="created != null" >
        #{created,jdbcType=INTEGER},
      </if>
      <if test="changed != null" >
        #{changed,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.opms.entity.PmsBusinesstripsExample" resultType="java.lang.Integer" >
    select count(*) from pms_businesstrips
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update pms_businesstrips
    <set >
      <if test="record.businesstripid != null" >
        businesstripid = #{record.businesstripid,jdbcType=BIGINT},
      </if>
      <if test="record.userid != null" >
        userid = #{record.userid,jdbcType=BIGINT},
      </if>
      <if test="record.destinations != null" >
        destinations = #{record.destinations,jdbcType=VARCHAR},
      </if>
      <if test="record.starteds != null" >
        starteds = #{record.starteds,jdbcType=VARCHAR},
      </if>
      <if test="record.endeds != null" >
        endeds = #{record.endeds,jdbcType=VARCHAR},
      </if>
      <if test="record.days != null" >
        days = #{record.days,jdbcType=TINYINT},
      </if>
      <if test="record.reason != null" >
        reason = #{record.reason,jdbcType=VARCHAR},
      </if>
      <if test="record.picture != null" >
        picture = #{record.picture,jdbcType=VARCHAR},
      </if>
      <if test="record.result != null" >
        result = #{record.result,jdbcType=BIT},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=BIT},
      </if>
      <if test="record.approverids != null" >
        approverids = #{record.approverids,jdbcType=VARCHAR},
      </if>
      <if test="record.created != null" >
        created = #{record.created,jdbcType=INTEGER},
      </if>
      <if test="record.changed != null" >
        changed = #{record.changed,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update pms_businesstrips
    set businesstripid = #{record.businesstripid,jdbcType=BIGINT},
      userid = #{record.userid,jdbcType=BIGINT},
      destinations = #{record.destinations,jdbcType=VARCHAR},
      starteds = #{record.starteds,jdbcType=VARCHAR},
      endeds = #{record.endeds,jdbcType=VARCHAR},
      days = #{record.days,jdbcType=TINYINT},
      reason = #{record.reason,jdbcType=VARCHAR},
      picture = #{record.picture,jdbcType=VARCHAR},
      result = #{record.result,jdbcType=BIT},
      status = #{record.status,jdbcType=BIT},
      approverids = #{record.approverids,jdbcType=VARCHAR},
      created = #{record.created,jdbcType=INTEGER},
      changed = #{record.changed,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.opms.entity.PmsBusinesstrips" >
    update pms_businesstrips
    <set >
      <if test="userid != null" >
        userid = #{userid,jdbcType=BIGINT},
      </if>
      <if test="destinations != null" >
        destinations = #{destinations,jdbcType=VARCHAR},
      </if>
      <if test="starteds != null" >
        starteds = #{starteds,jdbcType=VARCHAR},
      </if>
      <if test="endeds != null" >
        endeds = #{endeds,jdbcType=VARCHAR},
      </if>
      <if test="days != null" >
        days = #{days,jdbcType=TINYINT},
      </if>
      <if test="reason != null" >
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="picture != null" >
        picture = #{picture,jdbcType=VARCHAR},
      </if>
      <if test="result != null" >
        result = #{result,jdbcType=BIT},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=BIT},
      </if>
      <if test="approverids != null" >
        approverids = #{approverids,jdbcType=VARCHAR},
      </if>
      <if test="created != null" >
        created = #{created,jdbcType=INTEGER},
      </if>
      <if test="changed != null" >
        changed = #{changed,jdbcType=INTEGER},
      </if>
    </set>
    where businesstripid = #{businesstripid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.opms.entity.PmsBusinesstrips" >
    update pms_businesstrips
    set userid = #{userid,jdbcType=BIGINT},
      destinations = #{destinations,jdbcType=VARCHAR},
      starteds = #{starteds,jdbcType=VARCHAR},
      endeds = #{endeds,jdbcType=VARCHAR},
      days = #{days,jdbcType=TINYINT},
      reason = #{reason,jdbcType=VARCHAR},
      picture = #{picture,jdbcType=VARCHAR},
      result = #{result,jdbcType=BIT},
      status = #{status,jdbcType=BIT},
      approverids = #{approverids,jdbcType=VARCHAR},
      created = #{created,jdbcType=INTEGER},
      changed = #{changed,jdbcType=INTEGER}
    where businesstripid = #{businesstripid,jdbcType=BIGINT}
  </update>
</mapper>